{"version":3,"sources":["../server/server.js"],"names":["install","app","use","static","json","require","Users","db","get","req","res","collection","find","toArray","then","issues","metadata","total_count","length","_metadata","records","catch","error","console","log","status","message","post","createUser","listen"],"mappings":";;AAAA;;;;AAEA;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;AANA,2BAAiBA,OAAjB;;;AAYA;;AAEA,MAAMC,MAAM,wBAAZ;AACAA,IAAIC,GAAJ,CAAQ,kBAAQC,MAAR,CAAe,QAAf,CAAR;AACAF,IAAIC,GAAJ,CAAQ,qBAAWE,IAAX,EAAR;AACAC,QAAQ,sBAAR;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAMA,IAAIC,QAAQD,QAAQ,wBAAR,CAAZ;;AAEA,IAAIE,EAAJ;;AAEAN,IAAIO,GAAJ,CAAQ,aAAR,EAAuB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACnCH,KAAGI,UAAH,CAAc,QAAd,EAAwBC,IAAxB,GAA+BC,OAA/B,GACCC,IADD,CACMC,UAAU;AACd,UAAMC,WAAW,EAAEC,aAAaF,OAAOG,MAAtB,EAAjB;AACAR,QAAIN,IAAJ,CAAS,EAAEe,WAAWH,QAAb,EAAuBI,SAASL,MAAhC,EAAT;AACD,GAJD,EAKCM,KALD,CAKOC,SAAS;AACdC,YAAQC,GAAR,CAAYF,KAAZ;AACAZ,QAAIe,MAAJ,CAAW,GAAX,EAAgBrB,IAAhB,CAAqB,EAAEsB,SAAU,0BAAyBJ,KAAM,EAA3C,EAArB;AACD,GARD;AASD,CAVD;;AAYArB,IAAI0B,IAAJ,CAAS,aAAT,EAAwBrB,MAAMsB,UAA9B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIE3B,IAAI4B,MAAJ,CAAW,IAAX,EAAiB,MAAM;AACrBN,UAAQC,GAAR,CAAY,0BAAZ;AACD,CAFD","file":"server.js","sourcesContent":["import SourceMapSupport from 'source-map-support';\nSourceMapSupport.install();\nimport 'babel-polyfill';\nimport mongoose from 'mongoose';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport { MongoClient } from 'mongodb';\nimport Issue from './issue.js';\n\n\n\n\n\n// console.log(Users);\n\nconst app = express();\napp.use(express.static('static'));\napp.use(bodyParser.json());\nrequire('./config/mongoose.js');\n// require('./config/routes.js')(app);\n\n// if (process.env.NODE_ENV !== 'production'){\n//     const webpack = require('webpack');\n//     const webpackDevMiddleware = require('webpack-dev-middleware');\n//     const webpackHotMiddleware = require('webpack-hot-middleware');\n    \n//     const config = require('../webpack.config');\n//     config.entry.app.push('webpack-hot-middleware/client',\n//     'webpack/hot/only-dev-server');\n//     config.plugins.push(new webpack.HotModuleReplacementPlugin());\n\n//     const bundler = webpack(config);\n//     app.use(webpackDevMiddleware(bundler, { noInfo: true }));\n//     app.use(webpackHotMiddleware(bundler, { log: console.log }))\n// }\n\n\n\n\n\nvar Users = require('./controllers/users.js');\n\nlet db;\n\napp.get('/api/issues', (req, res) => {\n  db.collection('issues').find().toArray()\n  .then(issues => {\n    const metadata = { total_count: issues.length };\n    res.json({ _metadata: metadata, records: issues });\n  })\n  .catch(error => {\n    console.log(error);\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\n  });\n});\n\napp.post('/userCreate', Users.createUser);  \n\n// (req, res) => {\n//   const newIssue = req.body;\n//   newIssue.created = new Date();\n//   if (!newIssue.status) {\n//     newIssue.status = 'New';\n//   }\n\n//   const err = Issue.validateIssue(newIssue);\n//   if (err) {\n//     res.status(422).json({ message: `Invalid request: ${err}` });\n//     return;\n//   }\n\n//   db.collection('issues').insertOne(Issue.cleanupIssue(newIssue)).then(result =>\n//     db.collection('issues').find({ _id: result.insertedId }).limit(1)\n//     .next()\n//   )\n//   .then(savedIssue => {\n//     res.json(savedIssue);\n//   })\n//   .catch(error => {\n//     console.log(error);\n//     res.status(500).json({ message: `Internal Server Error: ${error}` });\n//   });\n// }\n\n\n\n  app.listen(3000, () => {\n    console.log('App started on port 3000');\n  });\n"]}